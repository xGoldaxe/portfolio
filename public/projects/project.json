{"projects":[
{
    "name": "Webserver",
    "date": "Jun. 2022",
    "tags": ["c++","http 1.1","server","backend","42", "rfc"],
    "desc":"Un projet de l'école 42 qui vise à créer un serveur http en c++ 'from scratch', avec cpp 98 et sans bibliothèque. En suivant la spécification rfc du protocole HTTP 1/1 la plus récente. Le principe est simple, recevoir une demande, comprendre la demande et renvoyer une réponse cohérente. Notre serveur est capable de servir des pages, images et fichiers lourds. C'est en sorte une réplique de nginx, y compris avec un fichier de configuration. Un long projet nécessitant beaucoup de parsing, qui devait être testé. Nous avons obtenu de très bonnes performances,  un taux de disponibilité imbattable et une vitesse de téléchargement particulièrement efficace. Cela est dû à un mécanisme de file d'attente, permettant de répartir les requêtes les plus longues pour ne pas bloquer les plus petites. Le serveur conserve les connexions en keep-alive, il y a système de timeout, de redirection, de multi-serveurs et bien d'autres fonctionnalités, comme un vrai serveur.",
    "image": "webserv.png",
    "link": "https://github.com/xGoldaxe/webserv"
},
{
    "name": "Raytracing",
    "date": "Jun. 2022",
    "tags": ["c","raytracing","math","3d"],
    "desc":"Un projet visant à réaliser un simple dispositif de ray tracing, une technique datant de 1968, encore utilisé aujourd'hui dans l'animation, et plus recement le jeux video. Il permet d'afficher des formes géométriques avec un rendu pouvant se rapprocher très près de la réalité. En utilisant les mathématiques, la physique et beaucoup d'empirisme. Ci-dessous et propose une intégration avec le langage C les principes de base cette technologie. Il est possible d'afficher des sphères, des cylindres et des plans. Avec réflectivité et lumieres de couleur.",
    "image": "rt.png",
    "link": "https://github.com/xGoldaxe/minirt"
},
{
    "name": "VigorGo",
    "date": "Mar. 2021",
    "tags": ["react","html","sass","vercel","hackathon"],
    "desc":"32h pour réaliser un projet! Voici le résultat du prototype, une application web présentent divers datas et permettant divers actions, comme la connection avec des profils similaires, une messagerie, un système de recommandations d'activitées, ect.. Un projet qui répond à une problématique posé par l'assurance Helsana, comment améliorer la santé des suisses, s'accompagne au protoypage toute une réfléxion autour du projet, une présentation du produit futur ainsi que du prototype.",
    "image": "vigorgo.PNG",
    "link": "https://helsana-case.vercel.app/register"
},
{
    "name":"Puissance 4 online",
    "date": "Jan. 2021",
    "tags": ["node","react","html","sass","heroku","personal hosting"],
    "desc":"L'objectif de ce projet était d’entraîner mes compétences en fullstack, c’est un puissance 4 en ligne et en temps réel. Il fonctionne grâce au web sockets via la librairie “socket.io”. Cette application web inclut différents types de parties: les parties classées et les parties privées. Chaque type de partie se rejoins différemment (et notamment un système de matchmaking). Il y a encore d’autres fonctionnalités tel que l’inscription/ connexion, les pages profils, les historiques de parties … Cette application web utilise node et react.",
    "image": "power4.png",
    "link": "https://puissance4.pierreevl.com"
},
{
    "name": "France Memes",
    "date": "Jan. 2021",
    "tags": ["next.js","react","html","sass","personal hosting"],
    "desc": "Intégration d’un design pour un site de présentation du plus gros serveur discord de “memes” francophone! Réalisé sous next.js, nous avons réussi à mettre en place un site optimisé SEO et extrêment bon en performance",
    "image": "fm.PNG",
    "link": "https://francememe.vercel.app"
},
{
    "name": "Blocky's game editor",
    "date": "Feb. 2021",
    "tags": ["vanilla js", "canvas api", "2d", "game", "personal hosting"],
    "desc": "Un petit jeu fait en javascript vanilla en exploitant l’api canvas. Un gameplay simple et efficace, des performances optimisées, pleins de niveaux, des collisions et même un éditeur de niveaux!",
    "image": "blocky.PNG",
    "link": "https://blocky-delta.vercel.app/"
},
{
    "name": "Insane transition library",
    "date": "Oct. 2020",
    "tags": ["js", "html", "css", "npm", "library", "personal hosting"],
    "desc": "Insane transition est une librairie de template d’animation simple et efficace. Prise en main en 1 min maximum. Les animations utilisent des propriétés css. Un site de présentation est une documentation on été ajouté autour de cette librairie.",
    "image": "insanet.PNG",
    "link": "https://insane-transition-doc.vercel.app/"
}
]}